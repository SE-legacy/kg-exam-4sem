#import "../conf.typ": lets

/ Система координат наблюдателя: --- декартова система координат, как правило, правая, начало которой лежит в точке наблюдения, а ось $O z$ противонаправлена вектору наблюдения.

Для перехода в систему координат наблюдателя нужно:
+ Переместить начало координат в точку наблюдения
+ Повернуть мир так, чтобы ось $O z$ была противонаправлена вектору наблюдения, а $O y$ была направлена вверх

Первое как всегда достигается смещением $"Translate"(-x_S, -y_S, -z_S)$, где $x_S, y_S, z_S$ --- координаты точки наблюдения, из которой наблюдатель смотрит на мир в сторону вектора наблюдения.

#lets $S(x_S, y_S, z_S)$ --- точка наблюдения, $overline(u)(u_1, u_2, u_3)$ --- направление вверх, $P(x_P, y_P, z_P)$ --- точка, в которую смотрит наблюдатель, $overline(p)$ --- радиус-вектор этой точки.

Определим базисные векторы системы координат наблюдателя.

$
overline(e')_3 = overline(p)/(|overline(p)|)
$

Помножив $overline(u)$ на $overline(e)_3$, получим направление $O x$:
$
overline(e')_1 = (overline(u) times overline(p))/(|overline(u) times overline(p)|)
$
Наконец, определим $overline(e)_2$:
$
overline(e')_2 = overline(e')_3 times overline(e')_1
$

Определим преобразование $"LookAt"$:

$
  mat(
    chi';
    gamma';
    xi';
    alpha'
  ) = mat(delim: "[",
    mat(e'_1; e'_2; e'_3), mat(delim: #none, 0; 0; 0);
    mat(delim: #none, 0, 0, 0), mat(delim: #none, 1)
 ) mat(delim: "[",
  1, 0, 0, -s_1;
  0, 1, 0, -s_2;
  0, 0, 1, -s_3;
  0, 0, 0, 1
 ) mat(
    chi;
    gamma;
    xi;
    alpha
  )
$

$
  "LookAt"(S, P, vec(u)) = mat(delim: "[",
    mat(e'_1; e'_2; e'_3), mat(delim: #none, 0; 0; 0);
    mat(delim: #none, 0, 0, 0), mat(delim: #none, 1)
 ) mat(delim: "[",
  1, 0, 0, -s_1;
  0, 1, 0, -s_2;
  0, 0, 1, -s_3;
  0, 0, 0, 1
 )
$
